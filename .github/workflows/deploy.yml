name: Deploy

on:
  push:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changes
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1)
          APPS_TO_DEPLOY=()

          if echo "$CHANGED_FILES" | grep -q "^docucraft-app/"; then
            APPS_TO_DEPLOY+=("docucraft-app")
          fi

          if echo "$CHANGED_FILES" | grep -q "^docucraft-landing/"; then
            APPS_TO_DEPLOY+=("docucraft-landing")
          fi

          if echo "$CHANGED_FILES" | grep -q "^docucraft-worker/"; then
            APPS_TO_DEPLOY+=("docucraft-worker")
          fi

          if [ ${#APPS_TO_DEPLOY[@]} -eq 0 ]; then
            MATRIX="[]"
          else
            MATRIX=$(printf '%s\n' "${APPS_TO_DEPLOY[@]}" | jq -R . | jq -s -c .)
          fi

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  deploy:
    needs: detect-changes
    if: needs.detect-changes.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: |
          cd ${{ matrix.app }}
          bun install --frozen-lockfile

      - name: Build
        run: |
          cd ${{ matrix.app }}
          bun run build

      - name: Test Web Vitals
        if: matrix.app != 'docucraft-worker'
        run: |
          cd ${{ matrix.app }}
          npx lighthouse --output=json --output-path=./lighthouse-report.json --chrome-flags="--headless" http://localhost:4321 || true

          # Extract performance score
          SCORE=$(node -e "
            try {
              const report = require('./lighthouse-report.json');
              const score = Math.round(report.categories.performance.score * 100);
              console.log(score);
            } catch(e) {
              console.log(0);
            }
          ")

          echo "Performance Score: $SCORE"

          if [ "$SCORE" -lt 90 ]; then
            echo "❌ Performance score $SCORE is below 90. Deployment cancelled."
            exit 1
          fi

          echo "✅ Performance score $SCORE is above 90. Proceeding with deployment."

      - name: Deploy
        run: |
          cd ${{ matrix.app }}

          case ${{ matrix.app }} in
            "docucraft-app")
              # Deploy to Cloudflare Pages
              bunx wrangler pages deploy dist --project-name=docucraft-app
              ;;
            "docucraft-landing")
              # Deploy to Cloudflare Pages
              bunx wrangler pages deploy dist --project-name=docucraft-landing
              ;;
            "docucraft-worker")
              bun run deploy
              ;;
          esac
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
